{
  "name": "BusDriver Toolbox",
  "tagline": "IC Communication for MATLAB®",
  "body": "## About\r\n*BusDriver* lets you interface MATLAB® directly to ICs performing analog and digital I/O. You can sense data for analysis and visualisation, generate data for control and test automation or even close the loop by inserting some fancy computations in between. It offers build-in support on high level abstraction for: \r\n\r\n* [GPIO](#an_001-interfacing-matlab-to-ics-via-gpio)\r\n* UART\r\n* SPI\r\n* I2C\r\n\r\n### *To shift up a gear*\r\n*BusDriver* supports MATLAB code generation capabilities to get your products real more quickly within a single tool chain. *BusDriver* is your powerfull companion driving you from rapid prototyping to series product development in no time.\r\n\r\n### *NEXT STOP: Licence Terms*\r\n*BusDriver* is released under commercial and [GNU GPL v.2](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html) open source licenses. Once your project becomes commercialised GPLv2 licensing dictates that you need to either open your source fully or purchase a commercial license. DspKitchen offer commercial licenses without any GPL restrictions. [Contact us for pricing](https://github.com/dspKitchen).\r\n\r\n## Geeting Started\r\n1. Start up MATLAB (Recommended is R2016a, but older versions will probably work fine)\r\n2. Downlaod and install the *BusDriver*-Library from within MATLAB\r\n\r\n\t```\r\n\t>> websave(filename,url)\r\n\t```\r\n\t\r\n3. Plug in a [supported USB-to-serial converter](#supported-usb-to-serial-converter), e.g.\r\n\t* 2-channel Mikroelektronika [click USB adapter](http://www.mikroe.com/click/usb-adapter/) (**Recommended due to its superior choice of ready to use [click boards™](http://www.mikroe.com/click/)**)\r\n\t* 1-channel Adafruit [FT232H Breakout](https://www.adafruit.com/products/2264) (This board is quite cheep)\r\n\t* 1-channel original [FT232H M232H-B](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#UM232H-B) \t\r\n\t* 2-channel original [FT2232H mini module](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#FT2232H_Mini)\r\n\t* 4-channel original [FT4232H mini module](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#FT4232H_Mini) (For all those who operate up to 4 ICs in parallel)\r\n4. Check whether your USB-to-serial converter is recognised by *BusDriver*\t\r\n\r\n\t```\r\n\t>> BusDriver.getDevices()\r\n\t\r\n\tans =\r\n\t\r\n\t[              0]    [              1]\r\n\t'Dual RS232-HS A'    'Dual RS232-HS B'\r\n\t'A'                  'B'              \r\n\t[              2]    [              2]\r\n\t[              6]    [              6]\r\n\t[       67330064]    [       67330064]\r\n\t[         202017]    [         202018]\r\n\t```\r\n\t\r\n5. You have done it - the engine runs fine! Now, attach an IC of choise to the FDTI-chip and let *BusDriver* hit the road.\r\n\r\n## Application Notes\r\n### AN_001 *Interfacing MATLAB to ICs via GPIO*\r\nConnect the pins and execute the function *AN_001* as follows\r\n* ADBUS0 (D0) and ADBUS4 (D4)\r\n* ADBUS1 (D1) and ADBUS5 (D5)\r\n* ADBUS2 (D2) and ADBUS6 (D6)\r\n* ADBUS3 (D3) and ADBUS7 (D7) \r\n\r\n```\r\n>> deviceId = 0;\r\n>> AN_001(deviceId)\r\nElapsed time for 1000 writes /sec = 0.16505\r\nElapsed time for 1000 reads  /sec = 0.18014\r\n\r\nans =\r\n\r\n     1     1     0     0     1     1     0     0\r\n```\r\n\t\r\nAnd here goes the code ... \r\n```matlab\r\n% Application Note AN_001, version 1.0.0\r\n\r\nfunction levelGet = AN_001(devId)\r\n%% Initialize the interface\r\nH = HGpio();            % Returns a GPIO object, H, to eighter drive or sense certain I/O-Pins\r\nH.deviceNumber = devId; % Must be 0 if only one device / channel is attached. Otherwise use 1, 2 etc.\r\nH.direction = [...      % Sets the direction for (A/B)DBUS 0:7 to either HGpio.IN or HGpio.OUT\r\n    HGpio.IN ...        % D0\r\n    HGpio.IN ...        % D1\r\n    HGpio.IN ...        % D2\r\n    HGpio.IN ...        % D3\r\n    HGpio.OUT ...       % D4\r\n    HGpio.OUT ...       % D5\r\n    HGpio.OUT ...       % D6\r\n    HGpio.OUT];         % D7\r\nH.clock_Hz = 3e6;       % Set clock rate to 3MHz (max frequency)\r\nH.timeout_ms = 3000;    % Set the read/write timeout to 3000ms\r\n\r\n%% Open the device and check status\r\nstatus = H.open();\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n\r\n%% Perform write and check status\r\nlevelSet = [...         % Set the level for (A/B)DBUS 0:7 to either HGpio.LOW or HGpio.HIGH\r\n    HGpio.LOW ...       % D0 - Will have no effect, since pin is defined as HGpio.IN\r\n    HGpio.LOW ...       % D1 - Will have no effect, since pin is defined as HGpio.IN\r\n    HGpio.LOW ...       % D2 - Will have no effect, since pin is defined as HGpio.IN\r\n    HGpio.LOW ...       % D3 - Will have no effect, since pin is defined as HGpio.IN\r\n    HGpio.HIGH ...      % D4\r\n    HGpio.HIGH ...      % D5\r\n    HGpio.LOW ...       % D6\r\n    HGpio.LOW];         % D7\r\n\r\nstatus = H.write(levelSet);\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n\r\n%% Perform read and check status - here we will see what was written before due to the hardwired loopback\r\n[levelGet, status] = H.read();\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n\r\n%% Measure execution time - we are quite snappy with ~125µs transaction time for a single write or read\r\ntic;\r\nfor i=1:1000; H.write(levelSet); end\r\nelapsedTimeWrite_s = toc;\r\ndisp(['Elapsed time for 1000 writes /sec = ', num2str(elapsedTimeWrite_s)]);\r\n\r\ntic;\r\nfor i=1:1000; H.read(); end\r\nelapsedTimeWrite_s = toc;\r\ndisp(['Elapsed time for 1000 reads  /sec = ', num2str(elapsedTimeWrite_s)]);\r\n\r\n%% Close the device and check status\r\nstatus = H.close();\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n```\r\n\r\n## Supported USB-to-serial converter\r\nAny FTDI USB-to-serial converter with one of the follwoing  ICs:\r\n\r\n* 1-channel [FT232H](http://www.ftdichip.com/Products/ICs/FT232H.htm)\r\n* 2-channel [FT2232H](http://www.ftdichip.com/Products/ICs/FT2232H.htm)\r\n* 4-channel [FT4232H](http://www.ftdichip.com/Products/ICs/FT4232H.htm)\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}