{
  "name": "BusDriver Toolbox",
  "tagline": "IC Communication for MATLAB®",
  "body": "*BusDriver* lets you interface MATLAB® directly to ICs performing analoge and digital I/O. You can sense data for analysis and visualisation, generate data for control and test automation or even close the loop by inserting some fancy computations in between. It offers build-in support on high level abstraction for: \r\n\r\n* GPIO\r\n* UART\r\n* SPI\r\n* I2C\r\n* *Parallel Interfaces are comming soon ...*\r\n\r\nTo shift up a gear: *BusDriver* supports MATLAB code generation capabilities to get your products real more quickly within a single tool chain. *BusDriver* is your powerfull companion driving you from rapid prototyping to series product development in no time.\r\n\r\nNEXT STOP: *BusDriver* is licensed under BSD 2-Clause License.\r\n\r\n## Geeting Started\r\n1. Start up MATLAB (Recommended is R2016a, but older versions will probably work fine)\r\n2. Downlaod and install the *BusDriver*-Library from within MATLAB\r\n\t\r\n\t```\r\n\t>> websave(filename,url)\r\n\t```\r\n\r\n3. Plug in a supported USB-to-serial converter, e.g.\r\n\t* 2-channel Mikroelektronika [click USB adapter](http://www.mikroe.com/click/usb-adapter/) (**Recommended due to its superior choice of ready to use [click boards™](http://www.mikroe.com/click/)**)\r\n\t* 1-channel Adafruit [FT232H Breakout](https://www.adafruit.com/products/2264) (This board is quite cheep)\r\n\t* 1-channel original [FT232H M232H-B](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#UM232H-B) \t\r\n\t* 2-channel original [FT2232H mini module](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#FT2232H_Mini)\r\n\t* 4-channel original [FT4232H mini module](http://www.ftdichip.com/Products/Modules/DevelopmentModules.htm#FT4232H_Mini) (For all those who operate up to 4 ICs in parallel)\r\n4. Check whether your FTDI-chip is recognised by *BusDriver*\t\r\n\t\t\r\n\t```\r\n\t>> BusDriver.getDevices()\r\n\t\t\r\n\tans =\r\n\t\r\n\t[              0]    [              1]\r\n\t'Dual RS232-HS A'    'Dual RS232-HS B'\r\n\t'A'                  'B'              \r\n\t[              2]    [              2]\r\n\t[              6]    [              6]\r\n\t[       67330064]    [       67330064]\r\n\t[         202017]    [         202018]\r\n\t```\r\n\t\r\n5. You have done it - the engine runs fine! Now, attach an IC of choise to the FDTI-chip and let *BusDriver* hit the road.\r\n\r\n## Application Notes\r\n### AN_001 *Interfacing MATLAB to ICs via GPIO*\r\nGround ADBUS1 (D1) and execute the function *AN_001* as follows\r\n```\r\n>> deviceId = 0;\r\n>> AN_001(deviceId)\r\n\r\nans = \r\n\r\n1     0     1     1     1     1     1     1\r\n```\r\n\t\r\nAnd here goes the code ... \r\n```matlab\r\n% Application Note AN_001, version 1.0.0\r\n\r\nfunction levelGet = AN_001(devId)\r\n%% Initialize the Interface\r\nH = HGpio();            % Returns a GPIO object, H, to eighter drive or sense certain I/O-Pins\r\nH.deviceNumber = devId; % Must be 0 if only one device / channel is attached. Otherwise use 1, 2 etc.\r\nH.direction = [...      % Sets the direction for (A/B)DBUS 0:7 to either HGpio.IN or HGpio.OUT\r\n\tHGpio.IN HGpio.IN HGpio.IN HGpio.IN HGpio.IN HGpio.IN HGpio.IN HGpio.IN];\r\nH.clock_Hz = 9600;      % Set clock rate to 9600 Hz\r\nH.timeout_ms = 3000;    % Set the read/write timeout to 3000ms\r\n\r\n%% Open the device and check status\r\nstatus = H.open();\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n\r\n%% Perform read and write (exactly this order) and check status\r\nlevelSet = [...         % Set the level for (A/B)DBUS 0:7 to either HGpio.LOW or HGpio.HIGH. Will have no effect, since als pins are defined as HGpio.IN\r\n\tHGpio.LOW HGpio.LOW HGpio.LOW HGpio.LOW HGpio.LOW HGpio.LOW HGpio.LOW HGpio.LOW];\r\n\t\r\n[levelGet, status] = H.readWrite(levelSet);\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n\r\n%% Close the device and check status\r\nstatus = H.close();\r\nif status; error(BusDriver.ERROR_CODES{status}); end\r\n```\r\n\r\n## Supported USB-to-serial converter\r\nAny FTDI USB-to-serial converter with one of the follwoing  ICs:\r\n\r\n* 1-channel [FT232H](http://www.ftdichip.com/Products/ICs/FT232H.htm)\r\n* 2-channel [FT2232H](http://www.ftdichip.com/Products/ICs/FT2232H.htm)\r\n* 4-channel [FT4232H](http://www.ftdichip.com/Products/ICs/FT4232H.htm)\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}